diff --git a/node_modules/@arbitrum/sdk/dist/lib/message/L2ToL1MessageNitro.js b/node_modules/@arbitrum/sdk/dist/lib/message/L2ToL1MessageNitro.js
index 9f4d66a..a089766 100644
--- a/node_modules/@arbitrum/sdk/dist/lib/message/L2ToL1MessageNitro.js
+++ b/node_modules/@arbitrum/sdk/dist/lib/message/L2ToL1MessageNitro.js
@@ -160,6 +160,9 @@ class L2ToL1MessageReaderNitro extends L2ToL1MessageNitro {
         const parsedLog = this.isAssertionCreatedLog(log)
             ? this.parseAssertionCreatedEvent(log)
             : this.parseNodeCreatedAssertion(log);
+        if (parsedLog.afterState.blockHash === '0x0000000000000000000000000000000000000000000000000000000000000000') {
+            return arbitrumProvider.getBlock(0);
+        }
         const l2Block = await arbitrumProvider.getBlock(parsedLog.afterState.blockHash);
         if (!l2Block) {
             throw new errors_1.ArbSdkError(`Block not found. ${parsedLog.afterState.blockHash}`);
@@ -263,9 +266,13 @@ class L2ToL1MessageReaderNitro extends L2ToL1MessageNitro {
                         toBlock: 'latest',
                         address: rollup.address,
                     });
-                    latestCreatedAssertionId =
-                        assertionCreatedEvents[assertionCreatedEvents.length - 1].event
-                            .assertionHash;
+                    if (assertionCreatedEvents.length !== 0) {
+                        latestCreatedAssertionId =
+                            assertionCreatedEvents[assertionCreatedEvents.length - 1].event
+                                .assertionHash;
+                    } else {
+                        latestCreatedAssertionId = latestConfirmedAssertionId;
+                    }
                 }
                 else {
                     latestCreatedAssertionId = await rollup.callStatic.latestNodeCreated();
